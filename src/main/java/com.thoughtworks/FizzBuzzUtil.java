package com.thoughtworks;import java.util.Arrays;import java.util.HashMap;import java.util.Map;import java.util.stream.Collectors;import static java.lang.String.valueOf;import static java.util.Objects.isNull;class FizzBuzzUtil {  private static Map<Integer, String> specificNumberAndSloganMap;  static {    specificNumberAndSloganMap = new HashMap<>();    specificNumberAndSloganMap.put(3, "Fizz");    specificNumberAndSloganMap.put(5, "Buzz");    specificNumberAndSloganMap.put(7, "Whizz");  }  static String fizzBuzz(int number) {    String correctSlogan = "";    int[] specificMultipleNumbers = null;    if (isContainsCharacter(number, "7")) {      if (isContainsCharacter(number, "3")) {        return specificNumberAndSloganMap.get(3);      }      specificMultipleNumbers = new int[]{3, 7};    } else if (isContainsCharacter(number, "5")) {      specificMultipleNumbers = new int[]{5, 7};    } else if (isContainsCharacter(number, "3")) {      return specificNumberAndSloganMap.get(3);    }    if (isNull(specificMultipleNumbers)) specificMultipleNumbers = new int[]{3, 5, 7};    correctSlogan += getSloganByMultipleOfSpecificNumbers(number, specificMultipleNumbers);    if (correctSlogan.equals("")) correctSlogan += number;    return correctSlogan;  }  private static boolean isContainsCharacter(int number, String s) {    return valueOf(number).contains(s);  }  private static String getSloganByMultipleOfSpecificNumbers(int number, int[] specificNumbers) {    return Arrays.stream(specificNumbers)            .boxed()            .map(specificNumber -> number % specificNumber == 0 ? specificNumberAndSloganMap.get(specificNumber) : "")            .collect(Collectors.joining(""));  }}